apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'jacoco'

apply from: "$project.rootDir/config/checkstyle/checkstyle.gradle"
apply from: "$project.rootDir/config/pmd/pmd.gradle"

jacoco {
    toolVersion = "0.7.4+"
    reportsDir = file("$buildDir/reports")
}


android {
    compileSdkVersion build_versions.compile_version
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        multiDexEnabled = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':data')

    compileOnly deps.javax_annotation
    implementation deps.javax_inject
    implementation deps.kotlin.stdlib
    implementation deps.rx_kotlin

    implementation deps.room.runtime
    implementation deps.room.rxjava2
    kapt deps.room.compiler

    testImplementation deps.junit
    testImplementation deps.kotlin.test
    testImplementation deps.mockito.kotlin
    testImplementation deps.assertj
    testImplementation deps.robolectric
    testImplementation deps.arch_core.testing
    testImplementation deps.room.testing
    androidTestImplementation deps.androidx.annotations
    androidTestImplementation deps.junit
}


task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    dependsOn 'testDebugUnitTest', 'pmd', 'checkstyle'
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                      '**/*Test*.*', 'android/**/*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*_*Factory.class',
                      '**/*ComponentImpl.class',
                      '**/*SubComponentBuilder.class']
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

// we need all open to run tests which  a we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}