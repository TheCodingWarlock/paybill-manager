apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion build_versions.compile_version
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        multiDexEnabled = true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }


    buildTypes.each {
        it.buildConfigField 'String', 'SAFARICOM_CONSUMER_KEY', SAFARICOM_CONSUMER_KEY
        it.buildConfigField 'String', 'SAFARICOM_CONSUMER_SECRET', SAFARICOM_CONSUMER_SECRET
        it.buildConfigField 'String', 'JENGA_API_KEY', JENGA_API_KEY
    }

    lintOptions {
        abortOnError false
        lintConfig rootProject.file('lint.xml')
    }

}

dependencies {
    implementation project(path: ':data')

    implementation deps.rx_kotlin
    implementation deps.javax_annotation
    implementation deps.javax_inject
    implementation deps.kotlin.stdlib

    /**
     * Retrofit
     */
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.jackson
    implementation deps.retrofit.rxjava2

    /**
     * OkHTTP
     */
    implementation deps.okhttp.okhttp
    implementation deps.okhttp.okhttp_logging_interceptor

    /**
     * Testing
     */
    testImplementation deps.junit
    testImplementation deps.assertj
    testImplementation deps.kotlin.test
    testImplementation deps.mock_web_server

    testImplementation deps.mockito.core
    testImplementation deps.mockito.kotlin


}

sourceCompatibility = "7"
targetCompatibility = "7"
